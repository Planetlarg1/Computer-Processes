/**
 * FSEQ.hdl
 * Combines circuits with feedback Load
 */

CHIP FSEQ {
    IN f1, f0, A, B, C, D, Load;
    OUT E, F, G;

    PARTS:
    // Intermediate signals
    Mux(a=C, b=F, sel=Load, out=CNext);
    Mux(a=D, b=G, sel=Load, out=DNext);

    // Logic for FZero
    FZero(A=A, B=B, C=CNext, D=DNext, F=FZeroF, G=FZeroG);
    
    // Logic for FOne
    FOne(A=A, B=B, C=CNext, D=DNext, F=FOneF, G=FOneG);

    // Logic for FTwo
    FTwo(A=A, B=B, C=CNext, D=DNext, F=FTwoF, G=FTwoG);
    
    // Logic for FThree
    FThree(A=A, B=B, C=CNext, D=DNext, E=FThreeE, F=FThreeF, G=FThreeG);

    // Select logic
    Mux16(a=FZeroF, b=FOneF, c=FTwoF, d=FThreeF, sel=Sel0, sel1=Sel1, out=F);
    Mux16(a=FZeroG, b=FOneG, c=FTwoG, d=FThreeG, sel=Sel0, sel1=Sel1, out=G);

    // Output logic
    Mux16(a=FZeroE, b=FOneE, c=FTwoE, d=FThreeE, sel=Sel0, sel1=Sel1, out=E);
}