/**
 * FALL.hdl
 * Combines FZero, FOne, FTwo, and FThree based on inputs f1 and f0.
 */

CHIP FALL {
    IN f1, f0, A, B, C, D; // Inputs
    OUT E, F, G; // Outputs

    PARTS:
    // Instantiating chips
    FZero(A=A, B=B, C=C, D=D, F=FZeroF, G=FZeroG);
    FOne(A=A, B=B, C=C, D=D, F=FOneF, G=FOneG);
    FTwo(A=A, B=B, C=C, D=D, F=FTwoF, G=FTwoG);
    FThree(A=A, B=B, C=C, D=D, E=FThreeE, F=FThreeF, G=FThreeG);

    // Multiplexers to select the correct output
    // F selection
    Mux(a=FZeroF, b=FOneF, sel=f1, out=tempF1);
    Mux(a=FTwoF, b=FThreeF, sel=f1, out=tempF2);
    Mux(a=tempF1, b=tempF2, sel=f0, out=F);

    // G selection
    Mux(a=FZeroG, b=FOneG, sel=f1, out=tempG1);
    Mux(a=FTwoG, b=FThreeG, sel=f1, out=tempG2);
    Mux(a=tempG1, b=tempG2, sel=f0, out=G);

    // E selection
    // E is only produced by FThree when f1 = 0 and f0 = 0
    // Use false for other cases
    Mux(a=false, b=FThreeE, sel=f0, out=tempE1);
    Mux(a=false, b=tempE1, sel=f1, out=E);
}
